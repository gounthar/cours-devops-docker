name: Slides Workflow

on:
  create:
    tags:
      - '*'
  push:
    branches-ignore:
      - gh-pages
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

env:
  REPOSITORY_URL: https://github.com/${{ github.repository }}
  PRESENTATION_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.ref_name }}

jobs:
  build-slides:
    name: 'Build Slides'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check environment'
        run: |
          docker compose version
          echo $REPOSITORY_URL
          echo $PRESENTATION_URL
      - name: 'Checkout'
        uses: actions/checkout@master
      - name: 'Validate package-lock.json sync'
        run: |
          cd npm-packages
          # Check if package.json and package-lock.json are in sync
          if ! npm ci --dry-run > /dev/null 2>&1; then
            echo "❌ ERROR: package.json and package-lock.json are out of sync"
            echo ""
            echo "To fix this issue:"
            echo "  1. Run: make dependencies-lock-update"
            echo "  2. Commit the updated package-lock.json"
            echo "  3. Push your changes"
            exit 1
          fi
          echo "✅ package.json and package-lock.json are in sync"
      - name: Build HTML slides
        run: make build
      - name: Build PDF slides
        run: make pdf # Reuses the 'make build' steps
      - name: 'Verify'
        run: make verify
      - name: 'Upload dist/ as artefact'
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: [build-slides]
    # Only run deploy when pushing code on a branch of the repository
    if: github.event_name == 'push'
    steps:
    - name: 'Download dist/ Artefacts'
      uses: actions/download-artifact@v5
      with:
        name: dist
        path: ./dist
    - name: 'Deploy to GitHub Pages'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        destination_dir: ${{ github.ref_name }}/
